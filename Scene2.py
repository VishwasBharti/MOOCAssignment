from manimlib.imports import *
class Scene2(GraphScene, Scene):
	def construct(self):
		heading = TextMobject("\\textsc{LSI(Linear Shift-Invariant) System}")
		heading.to_edge(UP)
		heading.set_color(GOLD_A)
		linearity_text = TextMobject("Linearity")
		linearity_text.next_to(heading, DOWN+LEFT)
		linearity_text.set_color(GOLD_B)
		x1_eq = TexMobject(r"{ x }_{ 1 }[n]\xrightarrow {  } { y }_{ 1 }[n]")
		x1_eq.next_to(heading, DOWN)
		x1_eq.set_color(BLUE)
		x2_eq = TexMobject(r"{ x }_{ 2 }[n]\xrightarrow {  } { y }_{ 2 }[n]")
		x2_eq.next_to(x1_eq, DOWN)
		x2_eq.set_color(BLUE)
		linearity_eq = TexMobject(r"\alpha { x }_{ 1 }[n]+\beta { x }_{ 2 }[n]\xrightarrow {  } { \alpha y }_{ 1 }[n]+{ \beta y }_{ 2 }[n]")
		linearity_eq.next_to(x2_eq, DOWN)
		linearity_eq.set_color(TEAL_A)
		self.add_sound("Scene2_prop1.wav", gain = 10)
		self.play(ShowCreation(heading))
		self.wait()
		self.play(ShowCreation(linearity_text))
		self.wait(3)
		self.play(ShowCreation(x1_eq))
		self.wait(10)
		self.play(ShowCreation(x2_eq))
		self.wait(2)
		self.play(ShowCreation(linearity_eq))
		self.wait(22)

		shift_invariance_text = TextMobject("Shift-Invariance or Time-Invariance")
		shift_invariance_text.to_edge(LEFT)
		shift_invariance_text.set_color(GOLD_B)
		x_eq = TexMobject(r"{ x }[n]\xrightarrow {  } { y }[n]")
		x_eq.next_to(linearity_eq, 6*DOWN)
		x_eq.set_color(BLUE)
		shift_invariance_eq = TexMobject(r"{ x }[n-D]\xrightarrow {  } { y }[n-D]")
		shift_invariance_eq.next_to(x_eq, DOWN)
		shift_invariance_eq.set_color(TEAL_A)
		shift_invariance_eq_text = TextMobject("where D is an integer")
		shift_invariance_eq_text.next_to(shift_invariance_eq, DOWN)
		shift_invariance_eq_text.set_color(TEAL_A)
		self.add_sound("Scene2_prop2.wav", gain = 10)
		self.play(ShowCreation(shift_invariance_text))
		self.wait()
		self.play(ShowCreation(x_eq))
		self.wait(9)
		self.play(ShowCreation(shift_invariance_eq))
		self.wait()
		self.play(ShowCreation(shift_invariance_eq_text))
		self.wait(22)