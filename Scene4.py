from manimlib.imports import *
class Scene4(GraphScene, Scene):
	CONFIG = {
		"plane_kwargs" : {
			"x_radius" : 2.1,
			"y_radius" : 2.1,
			"x_unit_size" : 1,
			"y_unit_size" : 1,
		}
		}
	def construct(self):
		DTFT_heading = TextMobject("\\underline{Discrete Time Fourier Transform(DTFT)}")
		DTFT_heading.set_color(GOLD_A)
		DTFT_heading.to_edge(UP)
		DTFT_intro_text = TextMobject("We usually want to know the frequency content of the input signal and modify it to get another signal. DTFT is an useful representation in that case.\\\\ If x[n] is absolutely summable, that is,  $\\sum _{ k=-\\infty  }^{ \\infty  }{ \\left| x[n] \\right| \\quad <\\quad \\infty \\quad  }$, then its discrete time Fourier Transform is given by,")
		DTFT_intro_text.set_color(BLUE)
		DTFT_intro_text.next_to(DTFT_heading, DOWN)
		DTFT = TexMobject(r"X(\omega)",r" = \quad \sum _{ n=-\infty  }^{ \infty  }{ ",r"x[n]",r"e^{-j\omega n} }")
		DTFT[0].set_color(MAROON_A)
		DTFT[1].set_color(LIGHT_BROWN)
		DTFT[2].set_color(WHITE)
		DTFT[3].set_color(LIGHT_BROWN)
		DTFT.next_to(DTFT_intro_text, DOWN)
		text1 = TextMobject("where $\\omega$ is a continuous variable. Interestingly, there is periodicity in X($\\omega$) with a period of 2$\\pi$, i.e. X($\\omega$) = X($\\omega$ + 2$\\pi$).\\\\ Therefore it is sufficient to observe X($\\omega$) from [-$\\pi$,$\\pi$].")
		text1.set_color(BLUE)
		text1.next_to(DTFT, DOWN)
		inverse_DTFT_text = TextMobject("To get back the original signal in time-domain, inverse DTFT is used which is given by,")
		inverse_DTFT_text.set_color(BLUE)
		inverse_DTFT_text.next_to(DTFT_heading, DOWN)
		inverse_DTFT = TexMobject(r"x[n]",r"\quad =\quad \frac { 1 }{ 2\pi  } \int _{ -\pi  }^{ \pi  }",r"{ X(\omega ) }",r" { e }^{ j\omega n }d\omega")
		inverse_DTFT[0].set_color(WHITE)
		inverse_DTFT[1].set_color(LIGHT_BROWN)
		inverse_DTFT[2].set_color(MAROON_A)
		inverse_DTFT[3].set_color(LIGHT_BROWN)
		inverse_DTFT.next_to(inverse_DTFT_text, DOWN)
		text2 = TextMobject("DTFT has several properties, for example, ")
		text2.set_color(BLUE)
		text2.next_to(DTFT_heading, DOWN)
		prop_1_text = TextMobject("\\underline{Linearity}")
		prop_1_text.set_color(ORANGE)
		prop_1_text.next_to(text2, DOWN+LEFT)
		prop_1 = TexMobject(r"\alpha",r" { x }_{ 1 }[n]",r"+\beta ",r"{ x }_{ 2 }[n]",r"\quad \xrightarrow { DTFT } \quad \alpha ",r"{ X }_{ 1 }(\omega)",r"+\beta",r" { X }_{ 2 }(\omega)")
		prop_1[0].set_color(LIGHT_BROWN)
		prop_1[1].set_color(WHITE)
		prop_1[2].set_color(LIGHT_BROWN)
		prop_1[3].set_color(WHITE)
		prop_1[4].set_color(LIGHT_BROWN)
		prop_1[5].set_color(MAROON_A)
		prop_1[6].set_color(LIGHT_BROWN)
		prop_1[7].set_color(MAROON_A)
		prop_1.next_to(text2, DOWN)
		prop_2_text = TextMobject("\\underline{Time reversal}")
		prop_2_text.set_color(ORANGE)
		prop_2_text.next_to(prop_1_text, DOWN)
		prop_2 = TexMobject(r"x[-n]",r" \quad \xrightarrow { DTFT } \quad ",r"X(-\omega)")
		prop_2[0].set_color(WHITE)
		prop_2[1].set_color(LIGHT_BROWN)
		prop_2[2].set_color(MAROON_A)
		prop_2.next_to(prop_1, DOWN)

		prop_3_text = TextMobject("\\underline{Convolution}")
		prop_3_text.set_color(ORANGE)
		prop_3_text.next_to(prop_2_text, DOWN)
		prop_3 = TexMobject(r"Y(\omega )",r"\quad =\quad \sum _{ n=-\infty  }^{ \infty  }{ \sum _{ k=-\infty  }^{ \infty  }{ ",r"h[k]x[n-k]",r"{ e }^{ -j\omega n } }  } \\ \qquad \quad \quad put\quad n-k\quad =\quad l\\ \qquad \quad =\quad \left[ \sum _{ l=-\infty  }^{ \infty  }{ x[l]{ e }^{ -j\omega l } }  \right] \left[ \sum _{ k=-\infty  }^{ \infty  }{ h[k]{ e }^{ -j\omega k } }  \right] \\ \qquad \quad =\quad",r" X(\omega )H(\omega )")
		prop_3[0].set_color(MAROON_A)
		prop_3[1].set_color(LIGHT_BROWN)
		prop_3[2].set_color(WHITE)
		prop_3[3].set_color(LIGHT_BROWN)
		prop_3[4].set_color(MAROON_A)
		prop_3.move_to(ORIGIN+DOWN)

		prop_4_text = TextMobject("\\underline{Conjugation}")
		prop_4_text.set_color(ORANGE)
		prop_4_text.next_to(DTFT_heading, DOWN+LEFT)
		prop_4 = TexMobject(r"\overline { x[n] }",r" \quad \xrightarrow { DTFT } \quad \sum _{ n\quad =\quad -\infty  }^{ \infty  }{ \overline { x[n] } { e }^{ -j\omega n } } \\ \qquad \qquad \qquad =\quad \sum _{ n\quad =\quad -\infty  }^{ \infty  }{ \overline { x[n]{ e }^{ j\omega n } }  } \\ \qquad \qquad \qquad =\quad \overline { \sum _{ n\quad =\quad -\infty  }^{ \infty  }{ x[n]{ e }^{ j\omega n } }  } \\ \qquad \qquad \qquad =\quad",r" \overline { X(-\omega ) } ")
		prop_4[0].set_color(WHITE)
		prop_4[1].set_color(LIGHT_BROWN)
		prop_4[2].set_color(MAROON_A)
		prop_4.move_to(ORIGIN)		
		
		prop_4_meaning = TexMobject(r"x[n] = \overline{x[n]} ",r"\implies X(\omega) = \overline{X(-\omega)}")
		prop_4_meaning[0].set_color(WHITE)
		prop_4_meaning[1].set_color(MAROON_A)
		prop_4_meaning.next_to(prop_4, DOWN)
		
		circle_plane = NumberPlane(**self.plane_kwargs)
		
		v1_label = TexMobject(r"X(\omega_o)")
		v1_label.set_color(GREEN)
		v2_label = TexMobject(r"X(-\omega_o)")
		v2_label.set_color(GREEN)
		v1 = Vector(2*RIGHT+2*UP)
		v1_cos = Vector(2*RIGHT)
		v1_sin = Vector(2*UP)
		v2 = Vector(2*RIGHT+2*DOWN)
		v2_cos = Vector(2*RIGHT)
		v2_sin = Vector(2*DOWN)
		v1_sin.set_color(YELLOW)
		v2_sin.set_color(RED)
		v1_cos.set_color(YELLOW)
		v2_cos.set_color(RED)
		v1_label.next_to(v1, RIGHT+UP)
		v2_label.next_to(v2, RIGHT+DOWN)
		v_final = Vector(4*RIGHT)
		v_final.set_color(ORANGE)
		
		prop_5_text = TextMobject("\\underline{Multiplication}")
		prop_5_text.set_color(ORANGE)
		prop_5_text.next_to(DTFT_heading, DOWN+LEFT)
		prop_5 = TexMobject(r"{ x }_{ 1 }[n]{ x }_{ 2 }[n]",r"\quad \xrightarrow { DTFT } \quad \sum _{ n = -\infty  }^{ \infty  }{ { x }_{ 1 }[n]{ x }_{ 2 }[n]{ e }^{ -j\omega n } } \\ \qquad \qquad \qquad \qquad =\quad \quad \sum _{ n = -\infty  }^{ \infty  }{ { x }_{ 1 }[n]",r"\left\{ \frac { 1 }{ 2\pi  } \int _{ -\pi  }^{ \pi  }{ { X }_{ 2 }(\nu ){ e }^{ j\nu n } } d\nu  \right\}",r" { e }^{ -j\omega n } } \\ \qquad \qquad \qquad \qquad =\quad \quad \frac { 1 }{ 2\pi  } \int _{ -\pi  }^{ \pi  }{ { X }_{ 2 }(\nu ) } ",r"\left\{ \sum _{ n = -\infty  }^{ \infty  }{ { x }_{ 1 }[n]{ e }^{ -j(\omega -\nu )n }\quad  }  \right\}",r" d\nu \\ \qquad \qquad \qquad \qquad =\quad \quad \frac { 1 }{ 2\pi  } \int _{ -\pi  }^{ \pi  }{ { X }_{ 2 }(\nu ) } ",r" \left\{ { X }_{ 1 }(\omega -\nu ) \right\}",r" d\nu \\ \qquad \qquad \qquad \qquad =\quad \quad \frac { 1 }{ 2\pi  } ",r"{ X }_{ 1 }{ *X }_{ 2 }(\omega )")
		prop_5[0].set_color(WHITE)
		prop_5[1].set_color(LIGHT_BROWN)
		prop_5[2].set_color(YELLOW)
		prop_5[3].set_color(LIGHT_BROWN)
		prop_5[4].set_color(YELLOW)
		prop_5[5].set_color(LIGHT_BROWN)
		prop_5[6].set_color(YELLOW)
		prop_5[7].set_color(LIGHT_BROWN)
		prop_5[8].set_color(MAROON_A)
		prop_5.move_to(ORIGIN)

		self.add_sound("Scene4_p1.wav", gain = 10)
		self.play(ShowCreation(DTFT_heading.scale(0.8)))
		self.wait()
		self.play(ShowCreation(DTFT_intro_text.scale(0.6)))
		self.wait(20)
		self.play(ShowCreation(DTFT.scale(0.8)))
		self.wait()
		self.play(ShowCreation(text1.scale(0.6)))
		self.wait(20)
		self.remove(DTFT_intro_text, text1)
		self.play(ShowCreation(inverse_DTFT_text.scale(0.6)))
		self.wait()
		self.play(ShowCreation(inverse_DTFT), DTFT.shift, DOWN)
		self.wait(8)
		self.add_sound("Scene4_p2.wav", gain = 10)
		self.wait(37)
		self.remove(inverse_DTFT, inverse_DTFT_text, DTFT)
		self.add_sound("Scene4_p3.wav", gain =10)
		self.play(ShowCreation(text2.scale(0.6)))
		self.wait()
		self.play(ShowCreation(prop_1_text.scale(0.6)))
		self.wait()
		self.play(ShowCreation(prop_1.scale(0.8)))
		self.wait(2)
		self.play(ShowCreation(prop_2_text.scale(0.6)))
		self.wait()
		self.play(ShowCreation(prop_2.scale(0.8)))
		self.wait(9)
		self.play(ShowCreation(prop_3_text.scale(0.6)))
		self.wait()
		self.play(ShowCreation(prop_3.scale(0.5)))
		self.wait(13)
		self.add_sound("Scene4_p4.wav", gain =10)
		self.wait(20)
		self.remove(text2, prop_1_text, prop_1, prop_2_text, prop_2, prop_3_text, prop_3)
		self.add_sound("Scene4_conjugation.wav", gain =10)
		self.play(ShowCreation(prop_4_text.scale(0.6)))
		self.wait(3)
		self.play(ShowCreation(prop_4.scale(0.5)))
		self.wait(7)
		self.play(ShowCreation(prop_4_meaning))
		self.wait(11)
		self.clear()
		self.play(ShowCreation(circle_plane))
		self.wait(8)
		self.play(ShowCreation(v1), ShowCreation(v2), ShowCreation(v1_label), ShowCreation(v2_label))
		self.wait(8)
		self.play(ShowCreation(v1_sin), ShowCreation(v1_cos), FadeOut(v1), Uncreate(v1_label))
		self.wait(2)
		self.play(ShowCreation(v2_sin), ShowCreation(v2_cos), FadeOut(v2), Uncreate(v2_label))
		self.play(FadeOut(v1_sin), FadeOut(v2_sin))
		self.play(ReplacementTransform(v1_cos, v_final), ReplacementTransform(v2_cos, v_final))
		self.wait(15)
		self.remove(prop_4_text, prop_4)
		self.clear()
		
		self.add_sound("Scene4_multiply.wav", gain =10)
		self.play(ShowCreation(prop_5_text.scale(0.6)))
		self.wait(9)
		self.play(ShowCreation(prop_5.scale(0.6)))
		self.wait(17)